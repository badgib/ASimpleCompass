<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE muclient>

<muclient>
  <plugin
     name="ASimpleCompass"
     author="gib"
     id="7b2a2ebfb6c27fd36abad61b"
     language="Lua"
     purpose="to help with sails"
     date_written="2024-02-06 04:20:42"
     requires="5.06"
     version="0.78"
  >
  </plugin>

  <script>
    <![CDATA[

        -- edit the directory and background colour
        local plugin_dir = "c:/games/MUSHclient/my_plugins"
        local background_colour = "white"

        win_dims = 200
        temp_dims = 0
        scale_x = 1
        direction = 0
        b_is_whirpool = false
        win = GetPluginID()

        function HandleShudders(_, _, wildcards)

            if wildcards[1] == "sharply " then
                if wildcards[2] == "port" then

                    direction = CircularValue(direction - 2)
                else
                    direction = CircularValue(direction + 2)
                end
            else
                if wildcards[2] == "port" then

                    direction = CircularValue(direction - 1)
                else
                    direction = CircularValue(direction + 1)
                end

            end
            UpdateDirection()
        end

        function HandleDrift(_, _, wildcards)

            if wildcards[1] == "port" then

                direction = CircularValue(direction - 1)
            else
                direction = CircularValue(direction + 1)
            end
            UpdateDirection()
        end

        function HandleSpinner(_, _, wildcards)

            b_is_whirpool = true
        end

        function HandleStart(_, _, wildcards)

            WindowShow(win, true)
            direction = 0
            b_is_whirpool = false
            b_win_visibility = true
            UpdateDirection(0)
            
        end

        function HandleFinish(_, _, wildcards)

            WindowShow(win, false)
            b_is_whirpool = false
            b_win_visibility = false
        end

        function HandleDirection(_, _, wildcards)

            local wildcard = wildcards[1]
            local value = 0
            if wildcard == "hubwards" then
                value = 0
            elseif wildcard == "widdershins-hubwards" then
                value = 1
            elseif wildcard == "widdershins" then
                value = 2
            elseif wildcard == "widdershins-rimwards" then
                value = 3
            elseif wildcard == "rimwards" then
                value = 4
            elseif wildcard == "turnwise-rimwards" then
                value = 5
            elseif wildcard == "turnwise" then
                value = 6
            elseif wildcard == "turnwise-hubwards" then
                value = 7
            else
                print("unknown direction: " .. wildcard[1])
                value = 0
            end

            b_is_whirpool = false
            direction = value
            UpdateDirection()
        end

        function UpdateDirection()

            local im_dim = WindowImageInfo(win, "compass" .. direction, 2)
            local im_scale = win_dims / im_dim

            WindowRectOp(win, 2, 0, 0,  200, 200, ColourNameToRGB(background_colour))

            if b_is_whirpool == true then

                WindowTransformImage(win, "whirpool", 0, 0, 3, im_scale, 0, 0, im_scale)
            else
                WindowTransformImage(win, "compass" .. direction, 0, 0, 3, im_scale, 0, 0, im_scale)
            end
            WindowRectOp(win, 1, win_dims - 10, win_dims - 10, win_dims, win_dims, ColourNameToRGB("magenta"))
        end

        -- usage currentVal = CircularValue(currentVal +/- value)
        function CircularValue(val)

            return (val % 16) % 8
        end

        function ResetPosition()

            WindowPosition(win, 0, 0, 7, 0)
        end

        function ResetHeading()

            direction = 0
            b_is_whirpool = false
            UpdateDirection()
        end

        local b_win_visibility = false
        function ToggleWindow()

            if b_win_visibility == false then

                WindowShow(win, true)
                b_win_visibility = true
                UpdateDirection(0)
            else
                WindowShow(win, false)
                b_win_visibility = false
            end
            direction = 0
        end

        function MouseDownHotspotOne(flags, hotspot_id)

            hs1_start_x, hs1_start_y = WindowInfo(win, 14), WindowInfo(win, 15)
        end

        function MouseDownHotspotTwo(flags, hotspot_id)

            hs2_start_x, hs2_start_y = WindowInfo(win, 17), WindowInfo(win, 18)
            temp_dims = win_dims
        end

        function DragMoveHotspotOne(flags, hotspot_id)
            local hs1_pos_x, hs1_pos_y = WindowInfo(win, 17), WindowInfo(win, 18)

            WindowPosition(win, hs1_pos_x - hs1_start_x, hs1_pos_y - hs1_start_y, 0, 2);

            if hs1_pos_x < 0 or hs1_pos_x > GetInfo(281) or
                hs1_pos_y < 0 or hs1_pos_y > GetInfo(280) then
                check(SetCursor(11))
            else
                check(SetCursor(1))
            end
        end

        function DragMoveHotspotTwo(flags, hotspot_id)

            local hs2_pos_x, hs2_pos_y = WindowInfo(win, 17), WindowInfo(win, 18)

            scale_x = hs2_pos_x / hs2_start_x
            win_dims = math.floor((temp_dims * scale_x) + 0.5)
            
            WindowResize(win, win_dims, win_dims, ColourNameToRGB ("magenta"))
        end

        function MouseUpHotspotTwo(flags, hotspot_id)

            WindowMoveHotspot(win, "hs2", win_dims - 10, win_dims - 10, win_dims, win_dims)
            WindowMoveHotspot(win, "hs1", 10, 10, win_dims - 10, win_dims - 10)
            
            UpdateDirection()
        end

        function InitWindow()

            WindowCreate (win, 0, 0, 200, 200, 7, 0, ColourNameToRGB(background_colour))  -- create window

            WindowLoadImage(win, "compass0", plugin_dir .. "/compass0.png")
            WindowLoadImage(win, "compass1", plugin_dir .. "/compass1.png")
            WindowLoadImage(win, "compass2", plugin_dir .. "/compass2.png")
            WindowLoadImage(win, "compass3", plugin_dir .. "/compass3.png")
            WindowLoadImage(win, "compass4", plugin_dir .. "/compass4.png")
            WindowLoadImage(win, "compass5", plugin_dir .. "/compass5.png")
            WindowLoadImage(win, "compass6", plugin_dir .. "/compass6.png")
            WindowLoadImage(win, "compass7", plugin_dir .. "/compass7.png")
            WindowLoadImage(win, "whirpool", plugin_dir .. "/whirpool.png")

            UpdateDirection()

            -- make a hotspot
            WindowAddHotspot(win, "hs1",  
                            10, 10, 190, 190,   -- rectangle
                            "",   -- MouseOver
                            "",   -- CancelMouseOver
                            "MouseDownHotspotOne",
                            "", 
                            "", 
                            "",  -- tooltip text
                            1, 0)  -- hand cursor
                            
            WindowDragHandler(win, "hs1", "DragMoveHotspotOne", "", 0) 

            WindowAddHotspot(win, "hs2",
                            190, 190, 200, 200,
                            "",   -- MouseOver
                            "",   -- CancelMouseOver
                            "MouseDownHotspotTwo",
                            "MouseUpHotspotTwo",
                            "",
                            "",
                            6, 0)

            WindowDragHandler(win, "hs2", "DragMoveHotspotTwo", "", 0)

                    
            WindowShow (win,  false)  -- show it 
        end

        InitWindow()
    ]]>
    </script>

    <aliases>
        <alias
            script="ToggleWindow"
            match="^!sailwin"
            enabled="y"
            sequence="10"
            ignore_case="y"
            regexp="y"
        >
        </alias>

        <alias
            script="ResetPosition"
            match="^!sailpos"
            enabled="y"
            sequence="11"
            ignore_case="y"
            regexp="y"
        >
        </alias>

        <alias
            script="ResetHeading"
            match="^!sailres"
            enabled="y"
            sequence="11"
            ignore_case="y"
            regexp="y"
        >
        </alias>
    </aliases>

    <triggers>
        <trigger
            enabled="y"
            keep_evaluating="n"
            match="^The ship shudders around you as it turns (sharply )*to (port|starboard)"
            regexp="y"
            sequence="12"
            script="HandleShudders"
            name="ShipShudders"
        >
        </trigger>

        <trigger
            enabled="y"
            keep_evaluating="n"
            match="^The powerful headwind causes the ship to drift off course to (port|starboard)"
            regexp="y"
            sequence="12"
            script="HandleDrift"
            name="ShipDrift"
        >
        </trigger>

        <trigger
            enabled="y"
            keep_evaluating="n"
            match="^The ship abruptly starts spinning in circles.  After a few rounds, it manages to escape the whirlpool, heading in a different direction from before."
            regexp="n"
            sequence="12"
            script="HandleSpinner"
            name="ShipSpinning"
        >
        </trigger>

        <trigger
            enabled="y"
            keep_evaluating="y"
            match="^(?:Squinting up at the sun|Gazing up at the stars), you determine that the ship is heading (?<=heading )(.*?)(?=(\s|\.))"
            regexp="y"
            sequence="12"
            script="HandleDirection"
            name="ShipDirection"
        >
        </trigger>
        <trigger
            enabled="y"
            keep_evaluating="n"
            match="^The loading of the ship complete, Chidder wishes you a safe and profitable trip as you climb aboard the SS Unsinkable."
            regexp="n"
            sequence="12"
            script="HandleStart"
            name="MissionStart"
        >
        </trigger>
        <trigger
            enabled="y"
            keep_evaluating="n"
            match="^The ship pulls into port.  You've arrived."
            regexp="n"
            sequence="12"
            script="HandleFinish"
            name="MissionFinish"
        >
        </trigger>
    </triggers>
</muclient>
